#pragma once
#include <iostream>

#ifndef FAHRZEUG_H_
#define FAHRZEUG_H_

extern double dGlobaleZeit;

// Klasse Fahrzeug
class Fahrzeug {
private:
	static int p_iMaxID;
protected:
	std::string p_sName = "";
	const int p_iID = 0;

	double p_dMaxGeschwindigkeit = 0;

	// Bisher zurückgelegte Gesamtstrecke
	double p_dGesamtStrecke = 0;

	// Gesamte Fahrtzeit des Objekts
	double p_dGesamtZeit = 0;

	// Zeit der letzten Simulation
	double p_dZeit = 0;
public:
	// Standardkonstruktor
	Fahrzeug();

	// Konstruktor mit dem Namen
	Fahrzeug(std::string sName);

	// Konstruktor mit dem Namen und der maximalen Geschwindigkeit
	Fahrzeug(std::string sName, double dMaxGeschwindkeit);

	// Funktion für die Überschrift der Tabelle für vAusgeben()
	static void vKopf();

	// Funktion zur tabellarischen Ausgabe der Spezifikationen des Fahrzeugs
	virtual void vAusgeben();

	// Funktion zum Simulieren
	virtual void vSimulieren();

	// Funktion für die Geschwindigkeit
	virtual double dGeschwindigkeit();

	// Funktion zum Tanken
	virtual double dTanken(double dMenge = std::numeric_limits<double>::infinity());


	// Überladung des Operators
	virtual void vAusgeben(std::ostream& o);
	std::ostream& operator<<(std::ostream& o, const Fahrzeug& fahrzeug);

	// Destruktor
	virtual ~Fahrzeug();
};

#endif
