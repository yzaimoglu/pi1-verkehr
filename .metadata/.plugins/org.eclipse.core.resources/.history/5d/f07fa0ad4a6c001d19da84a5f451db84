#include <math.h>
#include "Fahrrad.h"

// Standardkonstruktor
Fahrrad::Fahrrad() : Fahrzeug() {
	std::cout << " Das Fahrzeug ist ein Fahrrad." << std::endl;
}

// Konstruktor
Fahrrad::Fahrrad(std::string sName, double dMaxGeschwindigkeit)
	: Fahrzeug(sName, dMaxGeschwindigkeit) {
	std::cout << " Das Fahrzeug ist ein Fahrrad." << std::endl;
}

// Destruktor
Fahrrad::~Fahrrad() {

}

// Definition der override Memberfunktion dGeschwindigkeit()
double Fahrrad::dGeschwindigkeit() {
	// Anzahl der 20km Abschnitte
	int iAbschnitte = (int) (p_dGesamtStrecke / 20);

	// 10%ige Abnahme der Geschwindigkeit per 20km Abschnitt
	double dGeschwindigkeit = p_dMaxGeschwindigkeit * pow(1.0-0.1, iAbschnitte);

	// Minimalgeschwindigkeit soll 12km/h sein
	(dGeschwindigkeit > 12) ? dGeschwindigkeit : 12;
	return dGeschwindigkeit;
}

